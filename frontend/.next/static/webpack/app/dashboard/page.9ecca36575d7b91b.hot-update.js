"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/page",{

/***/ "(app-pages-browser)/./hooks/use-dashboard-data.ts":
/*!*************************************!*\
  !*** ./hooks/use-dashboard-data.ts ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useDashboardData: () => (/* binding */ useDashboardData)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_supabase_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/supabase-client */ \"(app-pages-browser)/./lib/supabase-client.ts\");\n/* __next_internal_client_entry_do_not_use__ useDashboardData auto */ \n\nfunction useDashboardData() {\n    const [goals, setGoals] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    const [recentActivity, setRecentActivity] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [dashboardStats, setDashboardStats] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [seasonalStats, setSeasonalStats] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [profile, setProfile] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    // Load profile data\n    const loadProfile = async ()=>{\n        try {\n            const user = await _lib_supabase_client__WEBPACK_IMPORTED_MODULE_1__.authHelpers.getCurrentUser();\n            if (!user) return;\n            const { data: profileData } = await _lib_supabase_client__WEBPACK_IMPORTED_MODULE_1__.supabase.from('profiles').select('*').eq('id', user.id).maybeSingle();\n            if (profileData) {\n                setProfile(profileData);\n            }\n        } catch (error) {\n            console.error('Error loading profile:', error);\n        }\n    };\n    // Load goals data\n    const loadGoals = async ()=>{\n        try {\n            const user = await _lib_supabase_client__WEBPACK_IMPORTED_MODULE_1__.authHelpers.getCurrentUser();\n            if (!user) return;\n            const { data: goalsData, error } = await _lib_supabase_client__WEBPACK_IMPORTED_MODULE_1__.supabase.from('goals').select('*').eq('user_id', user.id).order('created_at', {\n                ascending: false\n            });\n            if (error) throw error;\n            console.log('Raw goals data from DB:', goalsData);\n            setGoals(goalsData || []);\n        } catch (error) {\n            console.error('Error loading goals:', error);\n        } finally{\n            setLoading(false);\n        }\n    };\n    // Load dashboard data (notifications, stats, seasonal data)\n    const loadDashboardData = async ()=>{\n        try {\n            const user = await _lib_supabase_client__WEBPACK_IMPORTED_MODULE_1__.authHelpers.getCurrentUser();\n            if (!user) return;\n            // Load mutual followers' public activities\n            // First, get mutual followers (users who follow you and you follow them)\n            const { data: mutualFollowers } = await _lib_supabase_client__WEBPACK_IMPORTED_MODULE_1__.supabase.from('follows').select('follower_id, following_id').or(\"follower_id.eq.\".concat(user.id, \",following_id.eq.\").concat(user.id)).eq('status', 'accepted');\n            // Find mutual followers (both directions exist)\n            const followerIds = (mutualFollowers === null || mutualFollowers === void 0 ? void 0 : mutualFollowers.filter((f)=>f.following_id === user.id).map((f)=>f.follower_id)) || [];\n            const followingIds = (mutualFollowers === null || mutualFollowers === void 0 ? void 0 : mutualFollowers.filter((f)=>f.follower_id === user.id).map((f)=>f.following_id)) || [];\n            const mutualIds = followerIds.filter((id)=>followingIds.includes(id));\n            console.log('Mutual follower IDs:', mutualIds);\n            // Load recent public activities from mutual followers\n            let notifications = [];\n            if (mutualIds.length > 0) {\n                const { data: mutualActivities } = await _lib_supabase_client__WEBPACK_IMPORTED_MODULE_1__.supabase.from('notifications').select('*, profiles!notifications_user_id_fkey(first_name, last_name, username)').in('user_id', mutualIds).in('type', [\n                    'goal_completed',\n                    'goal_created',\n                    'streak_milestone',\n                    'achievement_unlocked',\n                    'activity_completed'\n                ]).order('created_at', {\n                    ascending: false\n                }).limit(5);\n                notifications = mutualActivities || [];\n            }\n            console.log('Loaded mutual followers activities:', notifications);\n            const iconMap = {\n                goal_completed: (__webpack_require__(/*! lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/lucide-react.js\").CheckCircle2),\n                goal_created: (__webpack_require__(/*! lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/lucide-react.js\").Target),\n                partner_request: (__webpack_require__(/*! lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/lucide-react.js\").Users),\n                achievement_unlocked: (__webpack_require__(/*! lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/lucide-react.js\").Trophy)\n            };\n            const colorMap = {\n                goal_completed: 'text-green-600',\n                goal_created: 'text-blue-600',\n                partner_request: 'text-purple-600',\n                achievement_unlocked: 'text-yellow-600'\n            };\n            const timeAgo = (date)=>{\n                const diff = Date.now() - new Date(date).getTime();\n                const minutes = Math.floor(diff / 60000);\n                const hours = Math.floor(diff / 3600000);\n                const days = Math.floor(diff / 86400000);\n                if (days > 0) return \"\".concat(days, \"d ago\");\n                if (hours > 0) return \"\".concat(hours, \"h ago\");\n                if (minutes > 0) return \"\".concat(minutes, \"m ago\");\n                return 'Just now';\n            };\n            const activities = (notifications || []).map((n)=>{\n                var _n_data;\n                const userName = n.profiles ? \"\".concat(n.profiles.first_name || '', \" \").concat(n.profiles.last_name || '').trim() || n.profiles.username || 'Someone' : 'Someone';\n                return {\n                    id: n.id,\n                    type: n.type || 'general',\n                    title: \"\".concat(userName, \" - \").concat(n.title || 'Activity'),\n                    description: n.message || 'No message',\n                    time: timeAgo(n.created_at),\n                    icon: iconMap[n.type] || (__webpack_require__(/*! lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/lucide-react.js\").Bell),\n                    color: colorMap[n.type] || 'text-gray-600',\n                    goalId: (_n_data = n.data) === null || _n_data === void 0 ? void 0 : _n_data.goal_id\n                };\n            });\n            console.log('Processed activities:', activities);\n            setRecentActivity(activities);\n            // Calculate dashboard stats from goals\n            const stats = {\n                totalGoals: goals.length,\n                activeGoals: goals.filter((g)=>g.status === 'active').length,\n                completedGoals: goals.filter((g)=>g.status === 'completed').length,\n                completionRate: goals.length > 0 ? Math.round(goals.filter((g)=>g.status === 'completed').length / goals.length * 100) : 0\n            };\n            setDashboardStats(stats);\n            // Load seasonal stats\n            const seasonalData = await (__webpack_require__(/*! @/lib/seasonal-goals-integration */ \"(app-pages-browser)/./lib/seasonal-goals-integration.ts\").seasonalIntegration).getSeasonalStats(user.id);\n            setSeasonalStats(seasonalData);\n            console.log('Dashboard stats:', stats);\n            console.log('Seasonal stats:', seasonalData);\n        } catch (error) {\n            console.error('Error loading dashboard data:', error);\n        }\n    };\n    // Get upcoming deadlines from goals\n    const upcomingDeadlines = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)({\n        \"useDashboardData.useMemo[upcomingDeadlines]\": ()=>{\n            const deadlines = goals.filter({\n                \"useDashboardData.useMemo[upcomingDeadlines].deadlines\": (g)=>g.target_date && !g.completed_at && !g.is_suspended\n            }[\"useDashboardData.useMemo[upcomingDeadlines].deadlines\"]).map({\n                \"useDashboardData.useMemo[upcomingDeadlines].deadlines\": (g)=>({\n                        id: g.id,\n                        title: g.title,\n                        dueDate: g.target_date,\n                        progress: g.progress || 0,\n                        priority: g.priority || 'medium'\n                    })\n            }[\"useDashboardData.useMemo[upcomingDeadlines].deadlines\"]).sort({\n                \"useDashboardData.useMemo[upcomingDeadlines].deadlines\": (a, b)=>new Date(a.dueDate).getTime() - new Date(b.dueDate).getTime()\n            }[\"useDashboardData.useMemo[upcomingDeadlines].deadlines\"]).slice(0, 3);\n            console.log('Upcoming deadlines:', deadlines);\n            return deadlines;\n        }\n    }[\"useDashboardData.useMemo[upcomingDeadlines]\"], [\n        goals\n    ]);\n    // Calculate category progress from goals\n    const categoryProgress = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)({\n        \"useDashboardData.useMemo[categoryProgress]\": ()=>{\n            const categories = [\n                'Health & Fitness',\n                'Learning',\n                'Career',\n                'Personal'\n            ];\n            const iconMap = {\n                'Health & Fitness': (__webpack_require__(/*! lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/lucide-react.js\").Heart),\n                'Learning': (__webpack_require__(/*! lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/lucide-react.js\").BookOpen),\n                'Career': (__webpack_require__(/*! lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/lucide-react.js\").Briefcase),\n                'Personal': (__webpack_require__(/*! lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/lucide-react.js\").Star)\n            };\n            const colorMap = {\n                'Health & Fitness': 'bg-green-500',\n                'Learning': 'bg-blue-500',\n                'Career': 'bg-purple-500',\n                'Personal': 'bg-orange-500'\n            };\n            return categories.map({\n                \"useDashboardData.useMemo[categoryProgress]\": (category)=>{\n                    const categoryGoals = goals.filter({\n                        \"useDashboardData.useMemo[categoryProgress].categoryGoals\": (g)=>{\n                            const goalCategory = g.category || g.goal_type || 'personal';\n                            return goalCategory === category.toLowerCase().replace(' & ', '-').replace(' ', '-');\n                        }\n                    }[\"useDashboardData.useMemo[categoryProgress].categoryGoals\"]);\n                    // Calculate combined progress for all goals in category\n                    const totalProgress = categoryGoals.reduce({\n                        \"useDashboardData.useMemo[categoryProgress].totalProgress\": (sum, goal)=>{\n                            if (goal.completed_at || goal.status === 'completed') {\n                                return sum + 100;\n                            }\n                            return sum + (goal.progress || 0);\n                        }\n                    }[\"useDashboardData.useMemo[categoryProgress].totalProgress\"], 0);\n                    const averageProgress = categoryGoals.length > 0 ? Math.round(totalProgress / categoryGoals.length) : 0;\n                    const completed = categoryGoals.filter({\n                        \"useDashboardData.useMemo[categoryProgress]\": (g)=>g.completed_at || g.status === 'completed'\n                    }[\"useDashboardData.useMemo[categoryProgress]\"]).length;\n                    const total = categoryGoals.length;\n                    // Include seasonal and standard goals\n                    const standardGoals = categoryGoals.filter({\n                        \"useDashboardData.useMemo[categoryProgress]\": (g)=>!g.is_seasonal && g.duration_type !== 'seasonal'\n                    }[\"useDashboardData.useMemo[categoryProgress]\"]).length;\n                    const seasonalGoals = categoryGoals.filter({\n                        \"useDashboardData.useMemo[categoryProgress]\": (g)=>g.is_seasonal || g.duration_type === 'seasonal'\n                    }[\"useDashboardData.useMemo[categoryProgress]\"]).length;\n                    return {\n                        name: category,\n                        completed,\n                        total,\n                        progress: averageProgress,\n                        standardGoals,\n                        seasonalGoals,\n                        color: colorMap[category],\n                        icon: iconMap[category]\n                    };\n                }\n            }[\"useDashboardData.useMemo[categoryProgress]\"]).filter({\n                \"useDashboardData.useMemo[categoryProgress]\": (c)=>c.total > 0\n            }[\"useDashboardData.useMemo[categoryProgress]\"]);\n        }\n    }[\"useDashboardData.useMemo[categoryProgress]\"], [\n        goals\n    ]);\n    // Calculate today stats\n    const activeGoals = goals.filter((g)=>!g.completed_at && !g.is_suspended);\n    const completedGoals = goals.filter((g)=>g.completed_at);\n    const maxStreak = Math.max(...goals.map((g)=>g.streak || 0), 0);\n    const avgStreak = goals.length > 0 ? Math.round(goals.reduce((sum, g)=>sum + (g.streak || 0), 0) / goals.length) : 0;\n    const todayStats = {\n        completed: completedGoals.length,\n        pending: activeGoals.length,\n        streak: avgStreak,\n        longestStreak: maxStreak\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useDashboardData.useEffect\": ()=>{\n            if (goals.length >= 0) {\n                loadDashboardData();\n            }\n        }\n    }[\"useDashboardData.useEffect\"], [\n        goals\n    ]);\n    return {\n        goals,\n        loading,\n        recentActivity,\n        dashboardStats,\n        seasonalStats,\n        profile,\n        upcomingDeadlines,\n        categoryProgress,\n        todayStats,\n        loadGoals,\n        loadProfile,\n        loadDashboardData\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2hvb2tzL3VzZS1kYXNoYm9hcmQtZGF0YS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O3NFQUU0RDtBQUNDO0FBd0R0RCxTQUFTSztJQUNkLE1BQU0sQ0FBQ0MsT0FBT0MsU0FBUyxHQUFHUCwrQ0FBUUEsQ0FBUSxFQUFFO0lBQzVDLE1BQU0sQ0FBQ1EsU0FBU0MsV0FBVyxHQUFHVCwrQ0FBUUEsQ0FBQztJQUN2QyxNQUFNLENBQUNVLGdCQUFnQkMsa0JBQWtCLEdBQUdYLCtDQUFRQSxDQUFpQixFQUFFO0lBQ3ZFLE1BQU0sQ0FBQ1ksZ0JBQWdCQyxrQkFBa0IsR0FBR2IsK0NBQVFBLENBQXdCO0lBQzVFLE1BQU0sQ0FBQ2MsZUFBZUMsaUJBQWlCLEdBQUdmLCtDQUFRQSxDQUF1QjtJQUN6RSxNQUFNLENBQUNnQixTQUFTQyxXQUFXLEdBQUdqQiwrQ0FBUUEsQ0FBaUI7SUFFdkQsb0JBQW9CO0lBQ3BCLE1BQU1rQixjQUFjO1FBQ2xCLElBQUk7WUFDRixNQUFNQyxPQUFPLE1BQU1oQiw2REFBV0EsQ0FBQ2lCLGNBQWM7WUFDN0MsSUFBSSxDQUFDRCxNQUFNO1lBRVgsTUFBTSxFQUFFRSxNQUFNQyxXQUFXLEVBQUUsR0FBRyxNQUFNbEIsMERBQVFBLENBQ3pDbUIsSUFBSSxDQUFDLFlBQ0xDLE1BQU0sQ0FBQyxLQUNQQyxFQUFFLENBQUMsTUFBTU4sS0FBS08sRUFBRSxFQUNoQkMsV0FBVztZQUVkLElBQUlMLGFBQWE7Z0JBQ2ZMLFdBQVdLO1lBQ2I7UUFDRixFQUFFLE9BQU9NLE9BQU87WUFDZEMsUUFBUUQsS0FBSyxDQUFDLDBCQUEwQkE7UUFDMUM7SUFDRjtJQUVBLGtCQUFrQjtJQUNsQixNQUFNRSxZQUFZO1FBQ2hCLElBQUk7WUFDRixNQUFNWCxPQUFPLE1BQU1oQiw2REFBV0EsQ0FBQ2lCLGNBQWM7WUFDN0MsSUFBSSxDQUFDRCxNQUFNO1lBRVgsTUFBTSxFQUFFRSxNQUFNVSxTQUFTLEVBQUVILEtBQUssRUFBRSxHQUFHLE1BQU14QiwwREFBUUEsQ0FDOUNtQixJQUFJLENBQUMsU0FDTEMsTUFBTSxDQUFDLEtBQ1BDLEVBQUUsQ0FBQyxXQUFXTixLQUFLTyxFQUFFLEVBQ3JCTSxLQUFLLENBQUMsY0FBYztnQkFBRUMsV0FBVztZQUFNO1lBRTFDLElBQUlMLE9BQU8sTUFBTUE7WUFDakJDLFFBQVFLLEdBQUcsQ0FBQywyQkFBMkJIO1lBQ3ZDeEIsU0FBU3dCLGFBQWEsRUFBRTtRQUMxQixFQUFFLE9BQU9ILE9BQU87WUFDZEMsUUFBUUQsS0FBSyxDQUFDLHdCQUF3QkE7UUFDeEMsU0FBVTtZQUNSbkIsV0FBVztRQUNiO0lBQ0Y7SUFFQSw0REFBNEQ7SUFDNUQsTUFBTTBCLG9CQUFvQjtRQUN4QixJQUFJO1lBQ0YsTUFBTWhCLE9BQU8sTUFBTWhCLDZEQUFXQSxDQUFDaUIsY0FBYztZQUM3QyxJQUFJLENBQUNELE1BQU07WUFFWCwyQ0FBMkM7WUFDM0MseUVBQXlFO1lBQ3pFLE1BQU0sRUFBRUUsTUFBTWUsZUFBZSxFQUFFLEdBQUcsTUFBTWhDLDBEQUFRQSxDQUM3Q21CLElBQUksQ0FBQyxXQUNMQyxNQUFNLENBQUMsNkJBQ1BhLEVBQUUsQ0FBQyxrQkFBNkNsQixPQUEzQkEsS0FBS08sRUFBRSxFQUFDLHFCQUEyQixPQUFSUCxLQUFLTyxFQUFFLEdBQ3ZERCxFQUFFLENBQUMsVUFBVTtZQUVoQixnREFBZ0Q7WUFDaEQsTUFBTWEsY0FBY0YsQ0FBQUEsNEJBQUFBLHNDQUFBQSxnQkFBaUJHLE1BQU0sQ0FBQ0MsQ0FBQUEsSUFBS0EsRUFBRUMsWUFBWSxLQUFLdEIsS0FBS08sRUFBRSxFQUFFZ0IsR0FBRyxDQUFDRixDQUFBQSxJQUFLQSxFQUFFRyxXQUFXLE1BQUssRUFBRTtZQUMxRyxNQUFNQyxlQUFlUixDQUFBQSw0QkFBQUEsc0NBQUFBLGdCQUFpQkcsTUFBTSxDQUFDQyxDQUFBQSxJQUFLQSxFQUFFRyxXQUFXLEtBQUt4QixLQUFLTyxFQUFFLEVBQUVnQixHQUFHLENBQUNGLENBQUFBLElBQUtBLEVBQUVDLFlBQVksTUFBSyxFQUFFO1lBQzNHLE1BQU1JLFlBQVlQLFlBQVlDLE1BQU0sQ0FBQ2IsQ0FBQUEsS0FBTWtCLGFBQWFFLFFBQVEsQ0FBQ3BCO1lBRWpFRyxRQUFRSyxHQUFHLENBQUMsd0JBQXdCVztZQUVwQyxzREFBc0Q7WUFDdEQsSUFBSUUsZ0JBQXVCLEVBQUU7WUFDN0IsSUFBSUYsVUFBVUcsTUFBTSxHQUFHLEdBQUc7Z0JBQ3hCLE1BQU0sRUFBRTNCLE1BQU00QixnQkFBZ0IsRUFBRSxHQUFHLE1BQU03QywwREFBUUEsQ0FDOUNtQixJQUFJLENBQUMsaUJBQ0xDLE1BQU0sQ0FBQywyRUFDUDBCLEVBQUUsQ0FBQyxXQUFXTCxXQUNkSyxFQUFFLENBQUMsUUFBUTtvQkFBQztvQkFBa0I7b0JBQWdCO29CQUFvQjtvQkFBd0I7aUJBQXFCLEVBQy9HbEIsS0FBSyxDQUFDLGNBQWM7b0JBQUVDLFdBQVc7Z0JBQU0sR0FDdkNrQixLQUFLLENBQUM7Z0JBRVRKLGdCQUFnQkUsb0JBQW9CLEVBQUU7WUFDeEM7WUFFQXBCLFFBQVFLLEdBQUcsQ0FBQyx1Q0FBdUNhO1lBRW5ELE1BQU1LLFVBQVU7Z0JBQ2RDLGdCQUFnQkMsa0lBQW9DO2dCQUNwREUsY0FBY0YsNEhBQThCO2dCQUM1Q0ksaUJBQWlCSiwySEFBNkI7Z0JBQzlDTSxzQkFBc0JOLDRIQUE4QjtZQUN0RDtZQUNBLE1BQU1RLFdBQVc7Z0JBQ2ZULGdCQUFnQjtnQkFDaEJHLGNBQWM7Z0JBQ2RFLGlCQUFpQjtnQkFDakJFLHNCQUFzQjtZQUN4QjtZQUVBLE1BQU1HLFVBQVUsQ0FBQ0M7Z0JBQ2YsTUFBTUMsT0FBT0MsS0FBS0MsR0FBRyxLQUFLLElBQUlELEtBQUtGLE1BQU1JLE9BQU87Z0JBQ2hELE1BQU1DLFVBQVVDLEtBQUtDLEtBQUssQ0FBQ04sT0FBTztnQkFDbEMsTUFBTU8sUUFBUUYsS0FBS0MsS0FBSyxDQUFDTixPQUFPO2dCQUNoQyxNQUFNUSxPQUFPSCxLQUFLQyxLQUFLLENBQUNOLE9BQU87Z0JBRS9CLElBQUlRLE9BQU8sR0FBRyxPQUFPLEdBQVEsT0FBTEEsTUFBSztnQkFDN0IsSUFBSUQsUUFBUSxHQUFHLE9BQU8sR0FBUyxPQUFOQSxPQUFNO2dCQUMvQixJQUFJSCxVQUFVLEdBQUcsT0FBTyxHQUFXLE9BQVJBLFNBQVE7Z0JBQ25DLE9BQU87WUFDVDtZQUVBLE1BQU1LLGFBQWEsQ0FBQzNCLGlCQUFpQixFQUFFLEVBQUVMLEdBQUcsQ0FBQyxDQUFDaUM7b0JBYWxDQTtnQkFaVixNQUFNQyxXQUFXRCxFQUFFRSxRQUFRLEdBQ3ZCLEdBQWtDRixPQUEvQkEsRUFBRUUsUUFBUSxDQUFDQyxVQUFVLElBQUksSUFBRyxLQUE4QixPQUEzQkgsRUFBRUUsUUFBUSxDQUFDRSxTQUFTLElBQUksSUFBS0MsSUFBSSxNQUFNTCxFQUFFRSxRQUFRLENBQUNJLFFBQVEsSUFBSSxZQUNoRztnQkFFSixPQUFPO29CQUNMdkQsSUFBSWlELEVBQUVqRCxFQUFFO29CQUNSd0QsTUFBTVAsRUFBRU8sSUFBSSxJQUFJO29CQUNoQkMsT0FBTyxHQUFpQlIsT0FBZEMsVUFBUyxPQUEyQixPQUF0QkQsRUFBRVEsS0FBSyxJQUFJO29CQUNuQ0MsYUFBYVQsRUFBRVUsT0FBTyxJQUFJO29CQUMxQkMsTUFBTXZCLFFBQVFZLEVBQUVZLFVBQVU7b0JBQzFCQyxNQUFNcEMsT0FBTyxDQUFDdUIsRUFBRU8sSUFBSSxDQUF5QixJQUFJNUIsMEhBQTRCO29CQUM3RW9DLE9BQU81QixRQUFRLENBQUNhLEVBQUVPLElBQUksQ0FBMEIsSUFBSTtvQkFDcERTLE1BQU0sR0FBRWhCLFVBQUFBLEVBQUV0RCxJQUFJLGNBQU5zRCw4QkFBQUEsUUFBUWlCLE9BQU87Z0JBQ3pCO1lBQ0Y7WUFFQS9ELFFBQVFLLEdBQUcsQ0FBQyx5QkFBeUJ3QztZQUVyQy9ELGtCQUFrQitEO1lBRWxCLHVDQUF1QztZQUN2QyxNQUFNbUIsUUFBUTtnQkFDWkMsWUFBWXhGLE1BQU0wQyxNQUFNO2dCQUN4QitDLGFBQWF6RixNQUFNaUMsTUFBTSxDQUFDeUQsQ0FBQUEsSUFBS0EsRUFBRUMsTUFBTSxLQUFLLFVBQVVqRCxNQUFNO2dCQUM1RGtELGdCQUFnQjVGLE1BQU1pQyxNQUFNLENBQUN5RCxDQUFBQSxJQUFLQSxFQUFFQyxNQUFNLEtBQUssYUFBYWpELE1BQU07Z0JBQ2xFbUQsZ0JBQWdCN0YsTUFBTTBDLE1BQU0sR0FBRyxJQUFJc0IsS0FBSzhCLEtBQUssQ0FBQyxNQUFPN0QsTUFBTSxDQUFDeUQsQ0FBQUEsSUFBS0EsRUFBRUMsTUFBTSxLQUFLLGFBQWFqRCxNQUFNLEdBQUcxQyxNQUFNMEMsTUFBTSxHQUFJLE9BQU87WUFDN0g7WUFDQW5DLGtCQUFrQmdGO1lBRWxCLHNCQUFzQjtZQUN0QixNQUFNUSxlQUFvQixNQUFNL0MsNElBQStELENBQUNpRCxnQkFBZ0IsQ0FBQ3BGLEtBQUtPLEVBQUU7WUFDeEhYLGlCQUFpQnNGO1lBRWpCeEUsUUFBUUssR0FBRyxDQUFDLG9CQUFvQjJEO1lBQ2hDaEUsUUFBUUssR0FBRyxDQUFDLG1CQUFtQm1FO1FBQ2pDLEVBQUUsT0FBT3pFLE9BQU87WUFDZEMsUUFBUUQsS0FBSyxDQUFDLGlDQUFpQ0E7UUFDakQ7SUFDRjtJQUVBLG9DQUFvQztJQUNwQyxNQUFNNEUsb0JBQW9CdEcsOENBQU9BO3VEQUFDO1lBQ2hDLE1BQU11RyxZQUFZbkcsTUFDZmlDLE1BQU07eUVBQUN5RCxDQUFBQSxJQUFLQSxFQUFFVSxXQUFXLElBQUksQ0FBQ1YsRUFBRVcsWUFBWSxJQUFJLENBQUNYLEVBQUVZLFlBQVk7d0VBQy9EbEUsR0FBRzt5RUFBQ3NELENBQUFBLElBQU07d0JBQ1R0RSxJQUFJc0UsRUFBRXRFLEVBQUU7d0JBQ1J5RCxPQUFPYSxFQUFFYixLQUFLO3dCQUNkMEIsU0FBU2IsRUFBRVUsV0FBVzt3QkFDdEJJLFVBQVVkLEVBQUVjLFFBQVEsSUFBSTt3QkFDeEJDLFVBQVVmLEVBQUVlLFFBQVEsSUFBSTtvQkFDMUI7d0VBQ0NDLElBQUk7eUVBQUMsQ0FBQ0MsR0FBR0MsSUFBTSxJQUFJaEQsS0FBSytDLEVBQUVKLE9BQU8sRUFBRXpDLE9BQU8sS0FBSyxJQUFJRixLQUFLZ0QsRUFBRUwsT0FBTyxFQUFFekMsT0FBTzt3RUFDMUUrQyxLQUFLLENBQUMsR0FBRztZQUVadEYsUUFBUUssR0FBRyxDQUFDLHVCQUF1QnVFO1lBQ25DLE9BQU9BO1FBQ1Q7c0RBQUc7UUFBQ25HO0tBQU07SUFFVix5Q0FBeUM7SUFDekMsTUFBTThHLG1CQUFtQmxILDhDQUFPQTtzREFBQztZQUMvQixNQUFNbUgsYUFBYTtnQkFBQztnQkFBb0I7Z0JBQVk7Z0JBQVU7YUFBVztZQUN6RSxNQUFNakUsVUFBVTtnQkFDZCxvQkFBb0JFLDJIQUE2QjtnQkFDakQsWUFBWUEsOEhBQWdDO2dCQUM1QyxVQUFVQSwrSEFBaUM7Z0JBQzNDLFlBQVlBLDBIQUE0QjtZQUMxQztZQUNBLE1BQU1RLFdBQVc7Z0JBQ2Ysb0JBQW9CO2dCQUNwQixZQUFZO2dCQUNaLFVBQVU7Z0JBQ1YsWUFBWTtZQUNkO1lBRUEsT0FBT3VELFdBQVczRSxHQUFHOzhEQUFDZ0YsQ0FBQUE7b0JBQ3BCLE1BQU1DLGdCQUFnQnJILE1BQU1pQyxNQUFNO29GQUFDeUQsQ0FBQUE7NEJBQ2pDLE1BQU00QixlQUFlNUIsRUFBRTBCLFFBQVEsSUFBSTFCLEVBQUU2QixTQUFTLElBQUk7NEJBQ2xELE9BQU9ELGlCQUFpQkYsU0FBU0ksV0FBVyxHQUFHQyxPQUFPLENBQUMsT0FBTyxLQUFLQSxPQUFPLENBQUMsS0FBSzt3QkFDbEY7O29CQUVBLHdEQUF3RDtvQkFDeEQsTUFBTUMsZ0JBQWdCTCxjQUFjTSxNQUFNO29GQUFDLENBQUNDLEtBQUtDOzRCQUMvQyxJQUFJQSxLQUFLeEIsWUFBWSxJQUFJd0IsS0FBS2xDLE1BQU0sS0FBSyxhQUFhO2dDQUNwRCxPQUFPaUMsTUFBTTs0QkFDZjs0QkFDQSxPQUFPQSxNQUFPQyxDQUFBQSxLQUFLckIsUUFBUSxJQUFJO3dCQUNqQzttRkFBRztvQkFFSCxNQUFNc0Isa0JBQWtCVCxjQUFjM0UsTUFBTSxHQUFHLElBQUlzQixLQUFLOEIsS0FBSyxDQUFDNEIsZ0JBQWdCTCxjQUFjM0UsTUFBTSxJQUFJO29CQUN0RyxNQUFNcUYsWUFBWVYsY0FBY3BGLE1BQU07c0VBQUN5RCxDQUFBQSxJQUFLQSxFQUFFVyxZQUFZLElBQUlYLEVBQUVDLE1BQU0sS0FBSztxRUFBYWpELE1BQU07b0JBQzlGLE1BQU1zRixRQUFRWCxjQUFjM0UsTUFBTTtvQkFFbEMsc0NBQXNDO29CQUN0QyxNQUFNdUYsZ0JBQWdCWixjQUFjcEYsTUFBTTtzRUFBQ3lELENBQUFBLElBQUssQ0FBQ0EsRUFBRXdDLFdBQVcsSUFBSXhDLEVBQUV5QyxhQUFhLEtBQUs7cUVBQVl6RixNQUFNO29CQUN4RyxNQUFNMEYsZ0JBQWdCZixjQUFjcEYsTUFBTTtzRUFBQ3lELENBQUFBLElBQUtBLEVBQUV3QyxXQUFXLElBQUl4QyxFQUFFeUMsYUFBYSxLQUFLO3FFQUFZekYsTUFBTTtvQkFFdkcsT0FBTzt3QkFDTDJGLE1BQU1qQjt3QkFDTlc7d0JBQ0FDO3dCQUNBeEIsVUFBVXNCO3dCQUNWRzt3QkFDQUc7d0JBQ0FoRCxPQUFPNUIsUUFBUSxDQUFDNEQsU0FBa0M7d0JBQ2xEbEMsTUFBTXBDLE9BQU8sQ0FBQ3NFLFNBQWlDO29CQUNqRDtnQkFDRjs2REFBR25GLE1BQU07OERBQUNxRyxDQUFBQSxJQUFLQSxFQUFFTixLQUFLLEdBQUc7O1FBQzNCO3FEQUFHO1FBQUNoSTtLQUFNO0lBRVYsd0JBQXdCO0lBQ3hCLE1BQU15RixjQUFjekYsTUFBTWlDLE1BQU0sQ0FBQ3lELENBQUFBLElBQUssQ0FBQ0EsRUFBRVcsWUFBWSxJQUFJLENBQUNYLEVBQUVZLFlBQVk7SUFDeEUsTUFBTVYsaUJBQWlCNUYsTUFBTWlDLE1BQU0sQ0FBQ3lELENBQUFBLElBQUtBLEVBQUVXLFlBQVk7SUFDdkQsTUFBTWtDLFlBQVl2RSxLQUFLd0UsR0FBRyxJQUFJeEksTUFBTW9DLEdBQUcsQ0FBQ3NELENBQUFBLElBQUtBLEVBQUUrQyxNQUFNLElBQUksSUFBSTtJQUM3RCxNQUFNQyxZQUFZMUksTUFBTTBDLE1BQU0sR0FBRyxJQUFJc0IsS0FBSzhCLEtBQUssQ0FBQzlGLE1BQU0ySCxNQUFNLENBQUMsQ0FBQ0MsS0FBS2xDLElBQU1rQyxNQUFPbEMsQ0FBQUEsRUFBRStDLE1BQU0sSUFBSSxJQUFJLEtBQUt6SSxNQUFNMEMsTUFBTSxJQUFJO0lBRXJILE1BQU1pRyxhQUFhO1FBQ2pCWixXQUFXbkMsZUFBZWxELE1BQU07UUFDaENrRyxTQUFTbkQsWUFBWS9DLE1BQU07UUFDM0IrRixRQUFRQztRQUNSRyxlQUFlTjtJQUNqQjtJQUVBNUksZ0RBQVNBO3NDQUFDO1lBQ1IsSUFBSUssTUFBTTBDLE1BQU0sSUFBSSxHQUFHO2dCQUNyQmI7WUFDRjtRQUNGO3FDQUFHO1FBQUM3QjtLQUFNO0lBRVYsT0FBTztRQUNMQTtRQUNBRTtRQUNBRTtRQUNBRTtRQUNBRTtRQUNBRTtRQUNBd0Y7UUFDQVk7UUFDQTZCO1FBQ0FuSDtRQUNBWjtRQUNBaUI7SUFDRjtBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXG1naWZ0XFxPbmVEcml2ZVxcRGVza3RvcFxcQ29tbWl0bHlcXENvbW1pdGx5XFxmcm9udGVuZFxcaG9va3NcXHVzZS1kYXNoYm9hcmQtZGF0YS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIlxuXG5pbXBvcnQgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0LCB1c2VNZW1vLCB1c2VSZWYgfSBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IHsgYXV0aEhlbHBlcnMsIHN1cGFiYXNlIH0gZnJvbSBcIkAvbGliL3N1cGFiYXNlLWNsaWVudFwiXG5pbXBvcnQgeyBDQVRFR09SSUVTLCBDQVRFR09SWV9NQVAgfSBmcm9tIFwiQC9saWIvY29uc3RhbnRzL2NhdGVnb3JpZXNcIlxuXG5pbnRlcmZhY2UgQWN0aXZpdHlJdGVtIHtcbiAgaWQ6IHN0cmluZ1xuICB0eXBlOiBzdHJpbmdcbiAgdGl0bGU6IHN0cmluZ1xuICBkZXNjcmlwdGlvbjogc3RyaW5nXG4gIHRpbWU6IHN0cmluZ1xuICBpY29uOiBSZWFjdC5Db21wb25lbnRUeXBlPGFueT5cbiAgY29sb3I6IHN0cmluZ1xuICBnb2FsSWQ/OiBzdHJpbmdcbn1cblxuaW50ZXJmYWNlIEdvYWxJdGVtIHtcbiAgaWQ6IHN0cmluZ1xuICB0aXRsZTogc3RyaW5nXG4gIGRlc2NyaXB0aW9uPzogc3RyaW5nXG4gIGR1ZURhdGU6IHN0cmluZ1xuICBjYXRlZ29yeT86IHN0cmluZ1xuICBwcm9ncmVzcz86IG51bWJlclxuICBzdGF0dXM/OiBzdHJpbmdcbn1cblxuaW50ZXJmYWNlIENhdGVnb3J5RGF0YSB7XG4gIG5hbWU6IHN0cmluZ1xuICBjb21wbGV0ZWQ6IG51bWJlclxuICB0b3RhbDogbnVtYmVyXG4gIHByb2dyZXNzOiBudW1iZXJcbiAgc3RhbmRhcmRHb2FsczogbnVtYmVyXG4gIHNlYXNvbmFsR29hbHM6IG51bWJlclxuICBjb2xvcjogc3RyaW5nXG4gIGljb246IFJlYWN0LkNvbXBvbmVudFR5cGU8YW55PlxufVxuXG5pbnRlcmZhY2UgRGFzaGJvYXJkU3RhdHMge1xuICB0b3RhbEdvYWxzOiBudW1iZXJcbiAgYWN0aXZlR29hbHM6IG51bWJlclxuICBjb21wbGV0ZWRHb2FsczogbnVtYmVyXG4gIGNvbXBsZXRpb25SYXRlOiBudW1iZXJcbn1cblxuaW50ZXJmYWNlIFNlYXNvbmFsU3RhdHMge1xuICBjdXJyZW50U2Vhc29uPzogc3RyaW5nXG4gIHNlYXNvblByb2dyZXNzPzogbnVtYmVyXG4gIHNlYXNvbmFsR29hbHM/OiBudW1iZXJcbiAgc2Vhc29uYWxBY2hpZXZlbWVudHM/OiBudW1iZXJcbn1cblxuaW50ZXJmYWNlIFByb2ZpbGUge1xuICBpZDogc3RyaW5nXG4gIGZpcnN0X25hbWU/OiBzdHJpbmdcbiAgbGFzdF9uYW1lPzogc3RyaW5nXG4gIHByb2ZpbGVfcGljdHVyZV91cmw/OiBzdHJpbmdcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVzZURhc2hib2FyZERhdGEoKSB7XG4gIGNvbnN0IFtnb2Fscywgc2V0R29hbHNdID0gdXNlU3RhdGU8YW55W10+KFtdKVxuICBjb25zdCBbbG9hZGluZywgc2V0TG9hZGluZ10gPSB1c2VTdGF0ZSh0cnVlKVxuICBjb25zdCBbcmVjZW50QWN0aXZpdHksIHNldFJlY2VudEFjdGl2aXR5XSA9IHVzZVN0YXRlPEFjdGl2aXR5SXRlbVtdPihbXSlcbiAgY29uc3QgW2Rhc2hib2FyZFN0YXRzLCBzZXREYXNoYm9hcmRTdGF0c10gPSB1c2VTdGF0ZTxEYXNoYm9hcmRTdGF0cyB8IG51bGw+KG51bGwpXG4gIGNvbnN0IFtzZWFzb25hbFN0YXRzLCBzZXRTZWFzb25hbFN0YXRzXSA9IHVzZVN0YXRlPFNlYXNvbmFsU3RhdHMgfCBudWxsPihudWxsKVxuICBjb25zdCBbcHJvZmlsZSwgc2V0UHJvZmlsZV0gPSB1c2VTdGF0ZTxQcm9maWxlIHwgbnVsbD4obnVsbClcblxuICAvLyBMb2FkIHByb2ZpbGUgZGF0YVxuICBjb25zdCBsb2FkUHJvZmlsZSA9IGFzeW5jICgpID0+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgdXNlciA9IGF3YWl0IGF1dGhIZWxwZXJzLmdldEN1cnJlbnRVc2VyKClcbiAgICAgIGlmICghdXNlcikgcmV0dXJuXG5cbiAgICAgIGNvbnN0IHsgZGF0YTogcHJvZmlsZURhdGEgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgICAgIC5mcm9tKCdwcm9maWxlcycpXG4gICAgICAgIC5zZWxlY3QoJyonKVxuICAgICAgICAuZXEoJ2lkJywgdXNlci5pZClcbiAgICAgICAgLm1heWJlU2luZ2xlKClcblxuICAgICAgaWYgKHByb2ZpbGVEYXRhKSB7XG4gICAgICAgIHNldFByb2ZpbGUocHJvZmlsZURhdGEpXG4gICAgICB9XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGxvYWRpbmcgcHJvZmlsZTonLCBlcnJvcilcbiAgICB9XG4gIH1cblxuICAvLyBMb2FkIGdvYWxzIGRhdGFcbiAgY29uc3QgbG9hZEdvYWxzID0gYXN5bmMgKCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCB1c2VyID0gYXdhaXQgYXV0aEhlbHBlcnMuZ2V0Q3VycmVudFVzZXIoKVxuICAgICAgaWYgKCF1c2VyKSByZXR1cm5cblxuICAgICAgY29uc3QgeyBkYXRhOiBnb2Fsc0RhdGEsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgICAgICAuZnJvbSgnZ29hbHMnKVxuICAgICAgICAuc2VsZWN0KCcqJylcbiAgICAgICAgLmVxKCd1c2VyX2lkJywgdXNlci5pZClcbiAgICAgICAgLm9yZGVyKCdjcmVhdGVkX2F0JywgeyBhc2NlbmRpbmc6IGZhbHNlIH0pXG5cbiAgICAgIGlmIChlcnJvcikgdGhyb3cgZXJyb3JcbiAgICAgIGNvbnNvbGUubG9nKCdSYXcgZ29hbHMgZGF0YSBmcm9tIERCOicsIGdvYWxzRGF0YSlcbiAgICAgIHNldEdvYWxzKGdvYWxzRGF0YSB8fCBbXSlcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgbG9hZGluZyBnb2FsczonLCBlcnJvcilcbiAgICB9IGZpbmFsbHkge1xuICAgICAgc2V0TG9hZGluZyhmYWxzZSlcbiAgICB9XG4gIH1cblxuICAvLyBMb2FkIGRhc2hib2FyZCBkYXRhIChub3RpZmljYXRpb25zLCBzdGF0cywgc2Vhc29uYWwgZGF0YSlcbiAgY29uc3QgbG9hZERhc2hib2FyZERhdGEgPSBhc3luYyAoKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHVzZXIgPSBhd2FpdCBhdXRoSGVscGVycy5nZXRDdXJyZW50VXNlcigpXG4gICAgICBpZiAoIXVzZXIpIHJldHVyblxuXG4gICAgICAvLyBMb2FkIG11dHVhbCBmb2xsb3dlcnMnIHB1YmxpYyBhY3Rpdml0aWVzXG4gICAgICAvLyBGaXJzdCwgZ2V0IG11dHVhbCBmb2xsb3dlcnMgKHVzZXJzIHdobyBmb2xsb3cgeW91IGFuZCB5b3UgZm9sbG93IHRoZW0pXG4gICAgICBjb25zdCB7IGRhdGE6IG11dHVhbEZvbGxvd2VycyB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAgICAgLmZyb20oJ2ZvbGxvd3MnKVxuICAgICAgICAuc2VsZWN0KCdmb2xsb3dlcl9pZCwgZm9sbG93aW5nX2lkJylcbiAgICAgICAgLm9yKGBmb2xsb3dlcl9pZC5lcS4ke3VzZXIuaWR9LGZvbGxvd2luZ19pZC5lcS4ke3VzZXIuaWR9YClcbiAgICAgICAgLmVxKCdzdGF0dXMnLCAnYWNjZXB0ZWQnKVxuXG4gICAgICAvLyBGaW5kIG11dHVhbCBmb2xsb3dlcnMgKGJvdGggZGlyZWN0aW9ucyBleGlzdClcbiAgICAgIGNvbnN0IGZvbGxvd2VySWRzID0gbXV0dWFsRm9sbG93ZXJzPy5maWx0ZXIoZiA9PiBmLmZvbGxvd2luZ19pZCA9PT0gdXNlci5pZCkubWFwKGYgPT4gZi5mb2xsb3dlcl9pZCkgfHwgW11cbiAgICAgIGNvbnN0IGZvbGxvd2luZ0lkcyA9IG11dHVhbEZvbGxvd2Vycz8uZmlsdGVyKGYgPT4gZi5mb2xsb3dlcl9pZCA9PT0gdXNlci5pZCkubWFwKGYgPT4gZi5mb2xsb3dpbmdfaWQpIHx8IFtdXG4gICAgICBjb25zdCBtdXR1YWxJZHMgPSBmb2xsb3dlcklkcy5maWx0ZXIoaWQgPT4gZm9sbG93aW5nSWRzLmluY2x1ZGVzKGlkKSlcblxuICAgICAgY29uc29sZS5sb2coJ011dHVhbCBmb2xsb3dlciBJRHM6JywgbXV0dWFsSWRzKVxuXG4gICAgICAvLyBMb2FkIHJlY2VudCBwdWJsaWMgYWN0aXZpdGllcyBmcm9tIG11dHVhbCBmb2xsb3dlcnNcbiAgICAgIGxldCBub3RpZmljYXRpb25zOiBhbnlbXSA9IFtdXG4gICAgICBpZiAobXV0dWFsSWRzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgY29uc3QgeyBkYXRhOiBtdXR1YWxBY3Rpdml0aWVzIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgICAgICAgIC5mcm9tKCdub3RpZmljYXRpb25zJylcbiAgICAgICAgICAuc2VsZWN0KCcqLCBwcm9maWxlcyFub3RpZmljYXRpb25zX3VzZXJfaWRfZmtleShmaXJzdF9uYW1lLCBsYXN0X25hbWUsIHVzZXJuYW1lKScpXG4gICAgICAgICAgLmluKCd1c2VyX2lkJywgbXV0dWFsSWRzKVxuICAgICAgICAgIC5pbigndHlwZScsIFsnZ29hbF9jb21wbGV0ZWQnLCAnZ29hbF9jcmVhdGVkJywgJ3N0cmVha19taWxlc3RvbmUnLCAnYWNoaWV2ZW1lbnRfdW5sb2NrZWQnLCAnYWN0aXZpdHlfY29tcGxldGVkJ10pXG4gICAgICAgICAgLm9yZGVyKCdjcmVhdGVkX2F0JywgeyBhc2NlbmRpbmc6IGZhbHNlIH0pXG4gICAgICAgICAgLmxpbWl0KDUpXG5cbiAgICAgICAgbm90aWZpY2F0aW9ucyA9IG11dHVhbEFjdGl2aXRpZXMgfHwgW11cbiAgICAgIH1cblxuICAgICAgY29uc29sZS5sb2coJ0xvYWRlZCBtdXR1YWwgZm9sbG93ZXJzIGFjdGl2aXRpZXM6Jywgbm90aWZpY2F0aW9ucylcblxuICAgICAgY29uc3QgaWNvbk1hcCA9IHtcbiAgICAgICAgZ29hbF9jb21wbGV0ZWQ6IHJlcXVpcmUoXCJsdWNpZGUtcmVhY3RcIikuQ2hlY2tDaXJjbGUyLFxuICAgICAgICBnb2FsX2NyZWF0ZWQ6IHJlcXVpcmUoXCJsdWNpZGUtcmVhY3RcIikuVGFyZ2V0LFxuICAgICAgICBwYXJ0bmVyX3JlcXVlc3Q6IHJlcXVpcmUoXCJsdWNpZGUtcmVhY3RcIikuVXNlcnMsXG4gICAgICAgIGFjaGlldmVtZW50X3VubG9ja2VkOiByZXF1aXJlKFwibHVjaWRlLXJlYWN0XCIpLlRyb3BoeVxuICAgICAgfVxuICAgICAgY29uc3QgY29sb3JNYXAgPSB7XG4gICAgICAgIGdvYWxfY29tcGxldGVkOiAndGV4dC1ncmVlbi02MDAnLFxuICAgICAgICBnb2FsX2NyZWF0ZWQ6ICd0ZXh0LWJsdWUtNjAwJyxcbiAgICAgICAgcGFydG5lcl9yZXF1ZXN0OiAndGV4dC1wdXJwbGUtNjAwJyxcbiAgICAgICAgYWNoaWV2ZW1lbnRfdW5sb2NrZWQ6ICd0ZXh0LXllbGxvdy02MDAnXG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHRpbWVBZ28gPSAoZGF0ZTogc3RyaW5nKSA9PiB7XG4gICAgICAgIGNvbnN0IGRpZmYgPSBEYXRlLm5vdygpIC0gbmV3IERhdGUoZGF0ZSkuZ2V0VGltZSgpXG4gICAgICAgIGNvbnN0IG1pbnV0ZXMgPSBNYXRoLmZsb29yKGRpZmYgLyA2MDAwMClcbiAgICAgICAgY29uc3QgaG91cnMgPSBNYXRoLmZsb29yKGRpZmYgLyAzNjAwMDAwKVxuICAgICAgICBjb25zdCBkYXlzID0gTWF0aC5mbG9vcihkaWZmIC8gODY0MDAwMDApXG5cbiAgICAgICAgaWYgKGRheXMgPiAwKSByZXR1cm4gYCR7ZGF5c31kIGFnb2BcbiAgICAgICAgaWYgKGhvdXJzID4gMCkgcmV0dXJuIGAke2hvdXJzfWggYWdvYFxuICAgICAgICBpZiAobWludXRlcyA+IDApIHJldHVybiBgJHttaW51dGVzfW0gYWdvYFxuICAgICAgICByZXR1cm4gJ0p1c3Qgbm93J1xuICAgICAgfVxuXG4gICAgICBjb25zdCBhY3Rpdml0aWVzID0gKG5vdGlmaWNhdGlvbnMgfHwgW10pLm1hcCgobjogYW55KSA9PiB7XG4gICAgICAgIGNvbnN0IHVzZXJOYW1lID0gbi5wcm9maWxlcyBcbiAgICAgICAgICA/IGAke24ucHJvZmlsZXMuZmlyc3RfbmFtZSB8fCAnJ30gJHtuLnByb2ZpbGVzLmxhc3RfbmFtZSB8fCAnJ31gLnRyaW0oKSB8fCBuLnByb2ZpbGVzLnVzZXJuYW1lIHx8ICdTb21lb25lJ1xuICAgICAgICAgIDogJ1NvbWVvbmUnXG4gICAgICAgIFxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIGlkOiBuLmlkLFxuICAgICAgICAgIHR5cGU6IG4udHlwZSB8fCAnZ2VuZXJhbCcsXG4gICAgICAgICAgdGl0bGU6IGAke3VzZXJOYW1lfSAtICR7bi50aXRsZSB8fCAnQWN0aXZpdHknfWAsXG4gICAgICAgICAgZGVzY3JpcHRpb246IG4ubWVzc2FnZSB8fCAnTm8gbWVzc2FnZScsXG4gICAgICAgICAgdGltZTogdGltZUFnbyhuLmNyZWF0ZWRfYXQpLFxuICAgICAgICAgIGljb246IGljb25NYXBbbi50eXBlIGFzIGtleW9mIHR5cGVvZiBpY29uTWFwXSB8fCByZXF1aXJlKFwibHVjaWRlLXJlYWN0XCIpLkJlbGwsXG4gICAgICAgICAgY29sb3I6IGNvbG9yTWFwW24udHlwZSBhcyBrZXlvZiB0eXBlb2YgY29sb3JNYXBdIHx8ICd0ZXh0LWdyYXktNjAwJyxcbiAgICAgICAgICBnb2FsSWQ6IG4uZGF0YT8uZ29hbF9pZFxuICAgICAgICB9XG4gICAgICB9KVxuXG4gICAgICBjb25zb2xlLmxvZygnUHJvY2Vzc2VkIGFjdGl2aXRpZXM6JywgYWN0aXZpdGllcylcblxuICAgICAgc2V0UmVjZW50QWN0aXZpdHkoYWN0aXZpdGllcylcblxuICAgICAgLy8gQ2FsY3VsYXRlIGRhc2hib2FyZCBzdGF0cyBmcm9tIGdvYWxzXG4gICAgICBjb25zdCBzdGF0cyA9IHtcbiAgICAgICAgdG90YWxHb2FsczogZ29hbHMubGVuZ3RoLFxuICAgICAgICBhY3RpdmVHb2FsczogZ29hbHMuZmlsdGVyKGcgPT4gZy5zdGF0dXMgPT09ICdhY3RpdmUnKS5sZW5ndGgsXG4gICAgICAgIGNvbXBsZXRlZEdvYWxzOiBnb2Fscy5maWx0ZXIoZyA9PiBnLnN0YXR1cyA9PT0gJ2NvbXBsZXRlZCcpLmxlbmd0aCxcbiAgICAgICAgY29tcGxldGlvblJhdGU6IGdvYWxzLmxlbmd0aCA+IDAgPyBNYXRoLnJvdW5kKChnb2Fscy5maWx0ZXIoZyA9PiBnLnN0YXR1cyA9PT0gJ2NvbXBsZXRlZCcpLmxlbmd0aCAvIGdvYWxzLmxlbmd0aCkgKiAxMDApIDogMFxuICAgICAgfVxuICAgICAgc2V0RGFzaGJvYXJkU3RhdHMoc3RhdHMpXG5cbiAgICAgIC8vIExvYWQgc2Vhc29uYWwgc3RhdHNcbiAgICAgIGNvbnN0IHNlYXNvbmFsRGF0YTogYW55ID0gYXdhaXQgcmVxdWlyZShcIkAvbGliL3NlYXNvbmFsLWdvYWxzLWludGVncmF0aW9uXCIpLnNlYXNvbmFsSW50ZWdyYXRpb24uZ2V0U2Vhc29uYWxTdGF0cyh1c2VyLmlkKVxuICAgICAgc2V0U2Vhc29uYWxTdGF0cyhzZWFzb25hbERhdGEpXG5cbiAgICAgIGNvbnNvbGUubG9nKCdEYXNoYm9hcmQgc3RhdHM6Jywgc3RhdHMpXG4gICAgICBjb25zb2xlLmxvZygnU2Vhc29uYWwgc3RhdHM6Jywgc2Vhc29uYWxEYXRhKVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBsb2FkaW5nIGRhc2hib2FyZCBkYXRhOicsIGVycm9yKVxuICAgIH1cbiAgfVxuXG4gIC8vIEdldCB1cGNvbWluZyBkZWFkbGluZXMgZnJvbSBnb2Fsc1xuICBjb25zdCB1cGNvbWluZ0RlYWRsaW5lcyA9IHVzZU1lbW8oKCkgPT4ge1xuICAgIGNvbnN0IGRlYWRsaW5lcyA9IGdvYWxzXG4gICAgICAuZmlsdGVyKGcgPT4gZy50YXJnZXRfZGF0ZSAmJiAhZy5jb21wbGV0ZWRfYXQgJiYgIWcuaXNfc3VzcGVuZGVkKVxuICAgICAgLm1hcChnID0+ICh7XG4gICAgICAgIGlkOiBnLmlkLFxuICAgICAgICB0aXRsZTogZy50aXRsZSxcbiAgICAgICAgZHVlRGF0ZTogZy50YXJnZXRfZGF0ZSxcbiAgICAgICAgcHJvZ3Jlc3M6IGcucHJvZ3Jlc3MgfHwgMCxcbiAgICAgICAgcHJpb3JpdHk6IGcucHJpb3JpdHkgfHwgJ21lZGl1bSdcbiAgICAgIH0pKVxuICAgICAgLnNvcnQoKGEsIGIpID0+IG5ldyBEYXRlKGEuZHVlRGF0ZSkuZ2V0VGltZSgpIC0gbmV3IERhdGUoYi5kdWVEYXRlKS5nZXRUaW1lKCkpXG4gICAgICAuc2xpY2UoMCwgMylcblxuICAgIGNvbnNvbGUubG9nKCdVcGNvbWluZyBkZWFkbGluZXM6JywgZGVhZGxpbmVzKVxuICAgIHJldHVybiBkZWFkbGluZXNcbiAgfSwgW2dvYWxzXSlcblxuICAvLyBDYWxjdWxhdGUgY2F0ZWdvcnkgcHJvZ3Jlc3MgZnJvbSBnb2Fsc1xuICBjb25zdCBjYXRlZ29yeVByb2dyZXNzID0gdXNlTWVtbygoKSA9PiB7XG4gICAgY29uc3QgY2F0ZWdvcmllcyA9IFsnSGVhbHRoICYgRml0bmVzcycsICdMZWFybmluZycsICdDYXJlZXInLCAnUGVyc29uYWwnXVxuICAgIGNvbnN0IGljb25NYXAgPSB7XG4gICAgICAnSGVhbHRoICYgRml0bmVzcyc6IHJlcXVpcmUoXCJsdWNpZGUtcmVhY3RcIikuSGVhcnQsXG4gICAgICAnTGVhcm5pbmcnOiByZXF1aXJlKFwibHVjaWRlLXJlYWN0XCIpLkJvb2tPcGVuLFxuICAgICAgJ0NhcmVlcic6IHJlcXVpcmUoXCJsdWNpZGUtcmVhY3RcIikuQnJpZWZjYXNlLFxuICAgICAgJ1BlcnNvbmFsJzogcmVxdWlyZShcImx1Y2lkZS1yZWFjdFwiKS5TdGFyXG4gICAgfVxuICAgIGNvbnN0IGNvbG9yTWFwID0ge1xuICAgICAgJ0hlYWx0aCAmIEZpdG5lc3MnOiAnYmctZ3JlZW4tNTAwJyxcbiAgICAgICdMZWFybmluZyc6ICdiZy1ibHVlLTUwMCcsXG4gICAgICAnQ2FyZWVyJzogJ2JnLXB1cnBsZS01MDAnLFxuICAgICAgJ1BlcnNvbmFsJzogJ2JnLW9yYW5nZS01MDAnXG4gICAgfVxuXG4gICAgcmV0dXJuIGNhdGVnb3JpZXMubWFwKGNhdGVnb3J5ID0+IHtcbiAgICAgIGNvbnN0IGNhdGVnb3J5R29hbHMgPSBnb2Fscy5maWx0ZXIoZyA9PiB7XG4gICAgICAgIGNvbnN0IGdvYWxDYXRlZ29yeSA9IGcuY2F0ZWdvcnkgfHwgZy5nb2FsX3R5cGUgfHwgJ3BlcnNvbmFsJ1xuICAgICAgICByZXR1cm4gZ29hbENhdGVnb3J5ID09PSBjYXRlZ29yeS50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoJyAmICcsICctJykucmVwbGFjZSgnICcsICctJylcbiAgICAgIH0pXG5cbiAgICAgIC8vIENhbGN1bGF0ZSBjb21iaW5lZCBwcm9ncmVzcyBmb3IgYWxsIGdvYWxzIGluIGNhdGVnb3J5XG4gICAgICBjb25zdCB0b3RhbFByb2dyZXNzID0gY2F0ZWdvcnlHb2Fscy5yZWR1Y2UoKHN1bSwgZ29hbCkgPT4ge1xuICAgICAgICBpZiAoZ29hbC5jb21wbGV0ZWRfYXQgfHwgZ29hbC5zdGF0dXMgPT09ICdjb21wbGV0ZWQnKSB7XG4gICAgICAgICAgcmV0dXJuIHN1bSArIDEwMFxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBzdW0gKyAoZ29hbC5wcm9ncmVzcyB8fCAwKVxuICAgICAgfSwgMClcblxuICAgICAgY29uc3QgYXZlcmFnZVByb2dyZXNzID0gY2F0ZWdvcnlHb2Fscy5sZW5ndGggPiAwID8gTWF0aC5yb3VuZCh0b3RhbFByb2dyZXNzIC8gY2F0ZWdvcnlHb2Fscy5sZW5ndGgpIDogMFxuICAgICAgY29uc3QgY29tcGxldGVkID0gY2F0ZWdvcnlHb2Fscy5maWx0ZXIoZyA9PiBnLmNvbXBsZXRlZF9hdCB8fCBnLnN0YXR1cyA9PT0gJ2NvbXBsZXRlZCcpLmxlbmd0aFxuICAgICAgY29uc3QgdG90YWwgPSBjYXRlZ29yeUdvYWxzLmxlbmd0aFxuXG4gICAgICAvLyBJbmNsdWRlIHNlYXNvbmFsIGFuZCBzdGFuZGFyZCBnb2Fsc1xuICAgICAgY29uc3Qgc3RhbmRhcmRHb2FscyA9IGNhdGVnb3J5R29hbHMuZmlsdGVyKGcgPT4gIWcuaXNfc2Vhc29uYWwgJiYgZy5kdXJhdGlvbl90eXBlICE9PSAnc2Vhc29uYWwnKS5sZW5ndGhcbiAgICAgIGNvbnN0IHNlYXNvbmFsR29hbHMgPSBjYXRlZ29yeUdvYWxzLmZpbHRlcihnID0+IGcuaXNfc2Vhc29uYWwgfHwgZy5kdXJhdGlvbl90eXBlID09PSAnc2Vhc29uYWwnKS5sZW5ndGhcblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogY2F0ZWdvcnksXG4gICAgICAgIGNvbXBsZXRlZCxcbiAgICAgICAgdG90YWwsXG4gICAgICAgIHByb2dyZXNzOiBhdmVyYWdlUHJvZ3Jlc3MsXG4gICAgICAgIHN0YW5kYXJkR29hbHMsXG4gICAgICAgIHNlYXNvbmFsR29hbHMsXG4gICAgICAgIGNvbG9yOiBjb2xvck1hcFtjYXRlZ29yeSBhcyBrZXlvZiB0eXBlb2YgY29sb3JNYXBdLFxuICAgICAgICBpY29uOiBpY29uTWFwW2NhdGVnb3J5IGFzIGtleW9mIHR5cGVvZiBpY29uTWFwXVxuICAgICAgfVxuICAgIH0pLmZpbHRlcihjID0+IGMudG90YWwgPiAwKVxuICB9LCBbZ29hbHNdKVxuXG4gIC8vIENhbGN1bGF0ZSB0b2RheSBzdGF0c1xuICBjb25zdCBhY3RpdmVHb2FscyA9IGdvYWxzLmZpbHRlcihnID0+ICFnLmNvbXBsZXRlZF9hdCAmJiAhZy5pc19zdXNwZW5kZWQpXG4gIGNvbnN0IGNvbXBsZXRlZEdvYWxzID0gZ29hbHMuZmlsdGVyKGcgPT4gZy5jb21wbGV0ZWRfYXQpXG4gIGNvbnN0IG1heFN0cmVhayA9IE1hdGgubWF4KC4uLmdvYWxzLm1hcChnID0+IGcuc3RyZWFrIHx8IDApLCAwKVxuICBjb25zdCBhdmdTdHJlYWsgPSBnb2Fscy5sZW5ndGggPiAwID8gTWF0aC5yb3VuZChnb2Fscy5yZWR1Y2UoKHN1bSwgZykgPT4gc3VtICsgKGcuc3RyZWFrIHx8IDApLCAwKSAvIGdvYWxzLmxlbmd0aCkgOiAwXG5cbiAgY29uc3QgdG9kYXlTdGF0cyA9IHtcbiAgICBjb21wbGV0ZWQ6IGNvbXBsZXRlZEdvYWxzLmxlbmd0aCxcbiAgICBwZW5kaW5nOiBhY3RpdmVHb2Fscy5sZW5ndGgsXG4gICAgc3RyZWFrOiBhdmdTdHJlYWssXG4gICAgbG9uZ2VzdFN0cmVhazogbWF4U3RyZWFrXG4gIH1cblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChnb2Fscy5sZW5ndGggPj0gMCkge1xuICAgICAgbG9hZERhc2hib2FyZERhdGEoKVxuICAgIH1cbiAgfSwgW2dvYWxzXSlcblxuICByZXR1cm4ge1xuICAgIGdvYWxzLFxuICAgIGxvYWRpbmcsXG4gICAgcmVjZW50QWN0aXZpdHksXG4gICAgZGFzaGJvYXJkU3RhdHMsXG4gICAgc2Vhc29uYWxTdGF0cyxcbiAgICBwcm9maWxlLFxuICAgIHVwY29taW5nRGVhZGxpbmVzLFxuICAgIGNhdGVnb3J5UHJvZ3Jlc3MsXG4gICAgdG9kYXlTdGF0cyxcbiAgICBsb2FkR29hbHMsXG4gICAgbG9hZFByb2ZpbGUsXG4gICAgbG9hZERhc2hib2FyZERhdGFcbiAgfVxufVxuIl0sIm5hbWVzIjpbInVzZVN0YXRlIiwidXNlRWZmZWN0IiwidXNlTWVtbyIsImF1dGhIZWxwZXJzIiwic3VwYWJhc2UiLCJ1c2VEYXNoYm9hcmREYXRhIiwiZ29hbHMiLCJzZXRHb2FscyIsImxvYWRpbmciLCJzZXRMb2FkaW5nIiwicmVjZW50QWN0aXZpdHkiLCJzZXRSZWNlbnRBY3Rpdml0eSIsImRhc2hib2FyZFN0YXRzIiwic2V0RGFzaGJvYXJkU3RhdHMiLCJzZWFzb25hbFN0YXRzIiwic2V0U2Vhc29uYWxTdGF0cyIsInByb2ZpbGUiLCJzZXRQcm9maWxlIiwibG9hZFByb2ZpbGUiLCJ1c2VyIiwiZ2V0Q3VycmVudFVzZXIiLCJkYXRhIiwicHJvZmlsZURhdGEiLCJmcm9tIiwic2VsZWN0IiwiZXEiLCJpZCIsIm1heWJlU2luZ2xlIiwiZXJyb3IiLCJjb25zb2xlIiwibG9hZEdvYWxzIiwiZ29hbHNEYXRhIiwib3JkZXIiLCJhc2NlbmRpbmciLCJsb2ciLCJsb2FkRGFzaGJvYXJkRGF0YSIsIm11dHVhbEZvbGxvd2VycyIsIm9yIiwiZm9sbG93ZXJJZHMiLCJmaWx0ZXIiLCJmIiwiZm9sbG93aW5nX2lkIiwibWFwIiwiZm9sbG93ZXJfaWQiLCJmb2xsb3dpbmdJZHMiLCJtdXR1YWxJZHMiLCJpbmNsdWRlcyIsIm5vdGlmaWNhdGlvbnMiLCJsZW5ndGgiLCJtdXR1YWxBY3Rpdml0aWVzIiwiaW4iLCJsaW1pdCIsImljb25NYXAiLCJnb2FsX2NvbXBsZXRlZCIsInJlcXVpcmUiLCJDaGVja0NpcmNsZTIiLCJnb2FsX2NyZWF0ZWQiLCJUYXJnZXQiLCJwYXJ0bmVyX3JlcXVlc3QiLCJVc2VycyIsImFjaGlldmVtZW50X3VubG9ja2VkIiwiVHJvcGh5IiwiY29sb3JNYXAiLCJ0aW1lQWdvIiwiZGF0ZSIsImRpZmYiLCJEYXRlIiwibm93IiwiZ2V0VGltZSIsIm1pbnV0ZXMiLCJNYXRoIiwiZmxvb3IiLCJob3VycyIsImRheXMiLCJhY3Rpdml0aWVzIiwibiIsInVzZXJOYW1lIiwicHJvZmlsZXMiLCJmaXJzdF9uYW1lIiwibGFzdF9uYW1lIiwidHJpbSIsInVzZXJuYW1lIiwidHlwZSIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJtZXNzYWdlIiwidGltZSIsImNyZWF0ZWRfYXQiLCJpY29uIiwiQmVsbCIsImNvbG9yIiwiZ29hbElkIiwiZ29hbF9pZCIsInN0YXRzIiwidG90YWxHb2FscyIsImFjdGl2ZUdvYWxzIiwiZyIsInN0YXR1cyIsImNvbXBsZXRlZEdvYWxzIiwiY29tcGxldGlvblJhdGUiLCJyb3VuZCIsInNlYXNvbmFsRGF0YSIsInNlYXNvbmFsSW50ZWdyYXRpb24iLCJnZXRTZWFzb25hbFN0YXRzIiwidXBjb21pbmdEZWFkbGluZXMiLCJkZWFkbGluZXMiLCJ0YXJnZXRfZGF0ZSIsImNvbXBsZXRlZF9hdCIsImlzX3N1c3BlbmRlZCIsImR1ZURhdGUiLCJwcm9ncmVzcyIsInByaW9yaXR5Iiwic29ydCIsImEiLCJiIiwic2xpY2UiLCJjYXRlZ29yeVByb2dyZXNzIiwiY2F0ZWdvcmllcyIsIkhlYXJ0IiwiQm9va09wZW4iLCJCcmllZmNhc2UiLCJTdGFyIiwiY2F0ZWdvcnkiLCJjYXRlZ29yeUdvYWxzIiwiZ29hbENhdGVnb3J5IiwiZ29hbF90eXBlIiwidG9Mb3dlckNhc2UiLCJyZXBsYWNlIiwidG90YWxQcm9ncmVzcyIsInJlZHVjZSIsInN1bSIsImdvYWwiLCJhdmVyYWdlUHJvZ3Jlc3MiLCJjb21wbGV0ZWQiLCJ0b3RhbCIsInN0YW5kYXJkR29hbHMiLCJpc19zZWFzb25hbCIsImR1cmF0aW9uX3R5cGUiLCJzZWFzb25hbEdvYWxzIiwibmFtZSIsImMiLCJtYXhTdHJlYWsiLCJtYXgiLCJzdHJlYWsiLCJhdmdTdHJlYWsiLCJ0b2RheVN0YXRzIiwicGVuZGluZyIsImxvbmdlc3RTdHJlYWsiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/use-dashboard-data.ts\n"));

/***/ })

});
"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/goals/create/page",{

/***/ "(app-pages-browser)/./lib/supabase-client.ts":
/*!********************************!*\
  !*** ./lib/supabase-client.ts ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authHelpers: () => (/* binding */ authHelpers),\n/* harmony export */   supabase: () => (/* binding */ supabase)\n/* harmony export */ });\n/* harmony import */ var _supabase_auth_helpers_nextjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/auth-helpers-nextjs */ \"(app-pages-browser)/./node_modules/@supabase/auth-helpers-nextjs/dist/index.js\");\n/* harmony import */ var _supabase_auth_helpers_nextjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_supabase_auth_helpers_nextjs__WEBPACK_IMPORTED_MODULE_0__);\n/* __next_internal_client_entry_do_not_use__ supabase,authHelpers auto */ \n// Create Supabase client (Next.js Auth Helpers uses cookies for SSR compatibility)\nconst supabase = (0,_supabase_auth_helpers_nextjs__WEBPACK_IMPORTED_MODULE_0__.createClientComponentClient)();\n// Simple auth helpers\nconst authHelpers = {\n    signUp: async (email, password, fullName)=>{\n        const { data, error } = await supabase.auth.signUp({\n            email,\n            password,\n            options: {\n                data: {\n                    full_name: fullName\n                }\n            }\n        });\n        if (error) throw error;\n        return data;\n    },\n    signIn: async (email, password)=>{\n        const { data, error } = await supabase.auth.signInWithPassword({\n            email,\n            password\n        });\n        if (error) throw error;\n        return data;\n    },\n    signOut: async ()=>{\n        await supabase.auth.signOut();\n    },\n    signInWithGoogle: async ()=>{\n        const { data, error } = await supabase.auth.signInWithOAuth({\n            provider: 'google',\n            options: {\n                redirectTo: \"\".concat(window.location.origin, \"/auth/callback\")\n            }\n        });\n        if (error) throw error;\n        return data;\n    },\n    getCurrentUser: async ()=>{\n        const { data: { user } } = await supabase.auth.getUser();\n        return user;\n    },\n    getSession: async ()=>{\n        const { data: { session } } = await supabase.auth.getSession();\n        return session;\n    },\n    hasCompletedKyc: async ()=>{\n        const user = await authHelpers.getCurrentUser();\n        if (!user) return false;\n        const { data } = await supabase.from('profiles').select('has_completed_kyc').eq('id', user.id).maybeSingle();\n        return (data === null || data === void 0 ? void 0 : data.has_completed_kyc) === true;\n    },\n    clearSession: async ()=>{\n        await supabase.auth.signOut();\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9zdXBhYmFzZS1jbGllbnQudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OzswRUFFNEU7QUFHNUUsbUZBQW1GO0FBQzVFLE1BQU1DLFdBQVdELDBGQUEyQkEsR0FBYTtBQUVoRSxzQkFBc0I7QUFDZixNQUFNRSxjQUFjO0lBQ3pCQyxRQUFRLE9BQU9DLE9BQWVDLFVBQWtCQztRQUM5QyxNQUFNLEVBQUVDLElBQUksRUFBRUMsS0FBSyxFQUFFLEdBQUcsTUFBTVAsU0FBU1EsSUFBSSxDQUFDTixNQUFNLENBQUM7WUFDakRDO1lBQ0FDO1lBQ0FLLFNBQVM7Z0JBQ1BILE1BQU07b0JBQUVJLFdBQVdMO2dCQUFTO1lBQzlCO1FBQ0Y7UUFDQSxJQUFJRSxPQUFPLE1BQU1BO1FBQ2pCLE9BQU9EO0lBQ1Q7SUFFQUssUUFBUSxPQUFPUixPQUFlQztRQUM1QixNQUFNLEVBQUVFLElBQUksRUFBRUMsS0FBSyxFQUFFLEdBQUcsTUFBTVAsU0FBU1EsSUFBSSxDQUFDSSxrQkFBa0IsQ0FBQztZQUM3RFQ7WUFDQUM7UUFDRjtRQUNBLElBQUlHLE9BQU8sTUFBTUE7UUFDakIsT0FBT0Q7SUFDVDtJQUVBTyxTQUFTO1FBQ1AsTUFBTWIsU0FBU1EsSUFBSSxDQUFDSyxPQUFPO0lBQzdCO0lBRUFDLGtCQUFrQjtRQUNoQixNQUFNLEVBQUVSLElBQUksRUFBRUMsS0FBSyxFQUFFLEdBQUcsTUFBTVAsU0FBU1EsSUFBSSxDQUFDTyxlQUFlLENBQUM7WUFDMURDLFVBQVU7WUFDVlAsU0FBUztnQkFDUFEsWUFBWSxHQUEwQixPQUF2QkMsT0FBT0MsUUFBUSxDQUFDQyxNQUFNLEVBQUM7WUFDeEM7UUFDRjtRQUNBLElBQUliLE9BQU8sTUFBTUE7UUFDakIsT0FBT0Q7SUFDVDtJQUVBZSxnQkFBZ0I7UUFDZCxNQUFNLEVBQUVmLE1BQU0sRUFBRWdCLElBQUksRUFBRSxFQUFFLEdBQUcsTUFBTXRCLFNBQVNRLElBQUksQ0FBQ2UsT0FBTztRQUN0RCxPQUFPRDtJQUNUO0lBRUFFLFlBQVk7UUFDVixNQUFNLEVBQUVsQixNQUFNLEVBQUVtQixPQUFPLEVBQUUsRUFBRSxHQUFHLE1BQU16QixTQUFTUSxJQUFJLENBQUNnQixVQUFVO1FBQzVELE9BQU9DO0lBQ1Q7SUFFQUMsaUJBQWlCO1FBQ2YsTUFBTUosT0FBTyxNQUFNckIsWUFBWW9CLGNBQWM7UUFDN0MsSUFBSSxDQUFDQyxNQUFNLE9BQU87UUFFbEIsTUFBTSxFQUFFaEIsSUFBSSxFQUFFLEdBQUcsTUFBTU4sU0FDcEIyQixJQUFJLENBQUMsWUFDTEMsTUFBTSxDQUFDLHFCQUNQQyxFQUFFLENBQUMsTUFBTVAsS0FBS1EsRUFBRSxFQUNoQkMsV0FBVztRQUVkLE9BQU96QixDQUFBQSxpQkFBQUEsMkJBQUFBLEtBQU0wQixpQkFBaUIsTUFBSztJQUNyQztJQUVBQyxjQUFjO1FBQ1osTUFBTWpDLFNBQVNRLElBQUksQ0FBQ0ssT0FBTztJQUM3QjtBQUNGLEVBQUUiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbWdpZnRcXE9uZURyaXZlXFxEZXNrdG9wXFxDb21taXRseVxcQ29tbWl0bHlcXGZyb250ZW5kXFxsaWJcXHN1cGFiYXNlLWNsaWVudC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCc7XG5cbmltcG9ydCB7IGNyZWF0ZUNsaWVudENvbXBvbmVudENsaWVudCB9IGZyb20gXCJAc3VwYWJhc2UvYXV0aC1oZWxwZXJzLW5leHRqc1wiO1xuaW1wb3J0IHR5cGUgeyBEYXRhYmFzZSB9IGZyb20gXCJAL3R5cGVzL3N1cGFiYXNlXCI7XG5cbi8vIENyZWF0ZSBTdXBhYmFzZSBjbGllbnQgKE5leHQuanMgQXV0aCBIZWxwZXJzIHVzZXMgY29va2llcyBmb3IgU1NSIGNvbXBhdGliaWxpdHkpXG5leHBvcnQgY29uc3Qgc3VwYWJhc2UgPSBjcmVhdGVDbGllbnRDb21wb25lbnRDbGllbnQ8RGF0YWJhc2U+KCk7XG5cbi8vIFNpbXBsZSBhdXRoIGhlbHBlcnNcbmV4cG9ydCBjb25zdCBhdXRoSGVscGVycyA9IHtcbiAgc2lnblVwOiBhc3luYyAoZW1haWw6IHN0cmluZywgcGFzc3dvcmQ6IHN0cmluZywgZnVsbE5hbWU6IHN0cmluZykgPT4ge1xuICAgIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlLmF1dGguc2lnblVwKHtcbiAgICAgIGVtYWlsLFxuICAgICAgcGFzc3dvcmQsXG4gICAgICBvcHRpb25zOiB7XG4gICAgICAgIGRhdGE6IHsgZnVsbF9uYW1lOiBmdWxsTmFtZSB9XG4gICAgICB9XG4gICAgfSk7XG4gICAgaWYgKGVycm9yKSB0aHJvdyBlcnJvcjtcbiAgICByZXR1cm4gZGF0YTtcbiAgfSxcblxuICBzaWduSW46IGFzeW5jIChlbWFpbDogc3RyaW5nLCBwYXNzd29yZDogc3RyaW5nKSA9PiB7XG4gICAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2UuYXV0aC5zaWduSW5XaXRoUGFzc3dvcmQoe1xuICAgICAgZW1haWwsXG4gICAgICBwYXNzd29yZFxuICAgIH0pO1xuICAgIGlmIChlcnJvcikgdGhyb3cgZXJyb3I7XG4gICAgcmV0dXJuIGRhdGE7XG4gIH0sXG5cbiAgc2lnbk91dDogYXN5bmMgKCkgPT4ge1xuICAgIGF3YWl0IHN1cGFiYXNlLmF1dGguc2lnbk91dCgpO1xuICB9LFxuXG4gIHNpZ25JbldpdGhHb29nbGU6IGFzeW5jICgpID0+IHtcbiAgICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZS5hdXRoLnNpZ25JbldpdGhPQXV0aCh7XG4gICAgICBwcm92aWRlcjogJ2dvb2dsZScsXG4gICAgICBvcHRpb25zOiB7XG4gICAgICAgIHJlZGlyZWN0VG86IGAke3dpbmRvdy5sb2NhdGlvbi5vcmlnaW59L2F1dGgvY2FsbGJhY2tgXG4gICAgICB9XG4gICAgfSk7XG4gICAgaWYgKGVycm9yKSB0aHJvdyBlcnJvcjtcbiAgICByZXR1cm4gZGF0YTtcbiAgfSxcblxuICBnZXRDdXJyZW50VXNlcjogYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IHsgZGF0YTogeyB1c2VyIH0gfSA9IGF3YWl0IHN1cGFiYXNlLmF1dGguZ2V0VXNlcigpO1xuICAgIHJldHVybiB1c2VyO1xuICB9LFxuXG4gIGdldFNlc3Npb246IGFzeW5jICgpID0+IHtcbiAgICBjb25zdCB7IGRhdGE6IHsgc2Vzc2lvbiB9IH0gPSBhd2FpdCBzdXBhYmFzZS5hdXRoLmdldFNlc3Npb24oKTtcbiAgICByZXR1cm4gc2Vzc2lvbjtcbiAgfSxcblxuICBoYXNDb21wbGV0ZWRLeWM6IGFzeW5jICgpID0+IHtcbiAgICBjb25zdCB1c2VyID0gYXdhaXQgYXV0aEhlbHBlcnMuZ2V0Q3VycmVudFVzZXIoKTtcbiAgICBpZiAoIXVzZXIpIHJldHVybiBmYWxzZTtcbiAgICBcbiAgICBjb25zdCB7IGRhdGEgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgICAuZnJvbSgncHJvZmlsZXMnKVxuICAgICAgLnNlbGVjdCgnaGFzX2NvbXBsZXRlZF9reWMnKVxuICAgICAgLmVxKCdpZCcsIHVzZXIuaWQpXG4gICAgICAubWF5YmVTaW5nbGUoKTtcbiAgICBcbiAgICByZXR1cm4gZGF0YT8uaGFzX2NvbXBsZXRlZF9reWMgPT09IHRydWU7XG4gIH0sXG5cbiAgY2xlYXJTZXNzaW9uOiBhc3luYyAoKSA9PiB7XG4gICAgYXdhaXQgc3VwYWJhc2UuYXV0aC5zaWduT3V0KCk7XG4gIH1cbn07Il0sIm5hbWVzIjpbImNyZWF0ZUNsaWVudENvbXBvbmVudENsaWVudCIsInN1cGFiYXNlIiwiYXV0aEhlbHBlcnMiLCJzaWduVXAiLCJlbWFpbCIsInBhc3N3b3JkIiwiZnVsbE5hbWUiLCJkYXRhIiwiZXJyb3IiLCJhdXRoIiwib3B0aW9ucyIsImZ1bGxfbmFtZSIsInNpZ25JbiIsInNpZ25JbldpdGhQYXNzd29yZCIsInNpZ25PdXQiLCJzaWduSW5XaXRoR29vZ2xlIiwic2lnbkluV2l0aE9BdXRoIiwicHJvdmlkZXIiLCJyZWRpcmVjdFRvIiwid2luZG93IiwibG9jYXRpb24iLCJvcmlnaW4iLCJnZXRDdXJyZW50VXNlciIsInVzZXIiLCJnZXRVc2VyIiwiZ2V0U2Vzc2lvbiIsInNlc3Npb24iLCJoYXNDb21wbGV0ZWRLeWMiLCJmcm9tIiwic2VsZWN0IiwiZXEiLCJpZCIsIm1heWJlU2luZ2xlIiwiaGFzX2NvbXBsZXRlZF9reWMiLCJjbGVhclNlc3Npb24iXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/supabase-client.ts\n"));

/***/ })

});
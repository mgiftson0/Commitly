"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_lib_achievement-tracker-db_ts"],{

/***/ "(app-pages-browser)/./lib/achievement-tracker-db.ts":
/*!***************************************!*\
  !*** ./lib/achievement-tracker-db.ts ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkAndUnlockAchievements: () => (/* binding */ checkAndUnlockAchievements),\n/* harmony export */   getAchievementProgress: () => (/* binding */ getAchievementProgress),\n/* harmony export */   getUserAchievements: () => (/* binding */ getUserAchievements),\n/* harmony export */   triggerAchievementCheck: () => (/* binding */ triggerAchievementCheck)\n/* harmony export */ });\n/* harmony import */ var _supabase_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./supabase-client */ \"(app-pages-browser)/./lib/supabase-client.ts\");\n/**\n * Database-backed Achievement Tracking System\n * Tracks and unlocks achievements based on user goals and activities\n */ \n// Achievement definitions will be fetched from database\n// import { ACHIEVEMENTS } from \"./achievements\";\n/**\n * Check for newly unlocked achievements and save to database\n */ async function checkAndUnlockAchievements() {\n    try {\n        const user = await _supabase_client__WEBPACK_IMPORTED_MODULE_0__.authHelpers.getCurrentUser();\n        if (!user) return [];\n        // Get user's goals from database\n        const { data: goals, error: goalsError } = await _supabase_client__WEBPACK_IMPORTED_MODULE_0__.supabase.from('goals').select('*').eq('user_id', user.id);\n        if (goalsError) throw goalsError;\n        // Get user's already unlocked achievements\n        const { data: unlockedAchievements, error: achievementsError } = await _supabase_client__WEBPACK_IMPORTED_MODULE_0__.supabase.from('user_achievements').select('achievement_id').eq('user_id', user.id);\n        if (achievementsError) throw achievementsError;\n        const unlockedIds = new Set((unlockedAchievements || []).map((ua)=>ua.achievement_id));\n        const userStats = {\n            encouragementsSent: 0 // TODO: implement encouragement tracking\n        };\n        // Get achievements from database\n        const { data: achievements, error: achievementsDefError } = await _supabase_client__WEBPACK_IMPORTED_MODULE_0__.supabase.from('achievements').select('*');\n        if (achievementsDefError) throw achievementsDefError;\n        // Check each achievement\n        const newlyUnlocked = [];\n        for (const achievement of achievements || []){\n            // Skip if already unlocked\n            if (unlockedIds.has(achievement.id)) continue;\n            // Check if conditions are met based on achievement type\n            let shouldUnlock = false;\n            switch(achievement.name){\n                case 'First Goal':\n                    shouldUnlock = ((goals === null || goals === void 0 ? void 0 : goals.length) || 0) >= 1;\n                    break;\n                case 'Goal Achiever':\n                    shouldUnlock = ((goals === null || goals === void 0 ? void 0 : goals.filter((g)=>g.status === 'completed').length) || 0) >= 1;\n                    break;\n                case 'Goal Master':\n                    shouldUnlock = ((goals === null || goals === void 0 ? void 0 : goals.filter((g)=>g.status === 'completed').length) || 0) >= 10;\n                    break;\n                default:\n                    shouldUnlock = false;\n            }\n            if (shouldUnlock) {\n                // Save to database\n                const { error: insertError } = await _supabase_client__WEBPACK_IMPORTED_MODULE_0__.supabase.from('user_achievements').insert({\n                    user_id: user.id,\n                    achievement_id: achievement.id,\n                    unlocked_at: new Date().toISOString()\n                });\n                if (!insertError) {\n                    // Create notification\n                    await _supabase_client__WEBPACK_IMPORTED_MODULE_0__.supabase.from('notifications').insert({\n                        user_id: user.id,\n                        title: 'Achievement Unlocked!',\n                        message: \"You've unlocked \\\"\".concat(achievement.title, '\" - ').concat(achievement.description),\n                        type: 'achievement_unlocked',\n                        read: false,\n                        data: {\n                            achievement_id: achievement.id,\n                            rarity: achievement.rarity\n                        }\n                    });\n                    newlyUnlocked.push(achievement);\n                    // Trigger celebration event\n                    if (true) {\n                        window.dispatchEvent(new CustomEvent('achievementUnlocked', {\n                            detail: achievement\n                        }));\n                    }\n                }\n            }\n        }\n        return newlyUnlocked;\n    } catch (error) {\n        console.error('Error checking achievements:', error);\n        return [];\n    }\n}\n/**\n * Trigger achievement check with debounce\n */ function triggerAchievementCheck() {\n    if (true) {\n        clearTimeout(window.achievementCheckTimeout);\n        window.achievementCheckTimeout = setTimeout(()=>{\n            checkAndUnlockAchievements();\n        }, 1000);\n    }\n}\n/**\n * Get user's unlocked achievements from database\n */ async function getUserAchievements() {\n    try {\n        const user = await _supabase_client__WEBPACK_IMPORTED_MODULE_0__.authHelpers.getCurrentUser();\n        if (!user) return [];\n        const { data, error } = await _supabase_client__WEBPACK_IMPORTED_MODULE_0__.supabase.from('user_achievements').select('*').eq('user_id', user.id).order('unlocked_at', {\n            ascending: false\n        });\n        if (error) throw error;\n        return data || [];\n    } catch (error) {\n        console.error('Error getting user achievements:', error);\n        return [];\n    }\n}\n/**\n * Get achievement progress for a specific achievement\n */ async function getAchievementProgress(achievementId) {\n    try {\n        const user = await _supabase_client__WEBPACK_IMPORTED_MODULE_0__.authHelpers.getCurrentUser();\n        if (!user) return null;\n        // Get achievement definition from database\n        const { data: achievements, error: achievementError } = await _supabase_client__WEBPACK_IMPORTED_MODULE_0__.supabase.from('achievements').select('*').eq('id', achievementId).single();\n        if (achievementError || !achievements) return null;\n        const achievement = achievements;\n        // Get user's goals\n        const { data: goals, error } = await _supabase_client__WEBPACK_IMPORTED_MODULE_0__.supabase.from('goals').select('*').eq('user_id', user.id);\n        if (error) throw error;\n        const userStats = {\n            encouragementsSent: 0\n        };\n        // Calculate progress based on achievement type\n        let progress = 0;\n        let total = 1;\n        switch(achievement.name){\n            case 'First Goal':\n                progress = Math.min((goals === null || goals === void 0 ? void 0 : goals.length) || 0, 1);\n                total = 1;\n                break;\n            case 'Goal Achiever':\n                progress = Math.min((goals === null || goals === void 0 ? void 0 : goals.filter((g)=>g.status === 'completed').length) || 0, 1);\n                total = 1;\n                break;\n            case 'Goal Master':\n                progress = Math.min((goals === null || goals === void 0 ? void 0 : goals.filter((g)=>g.status === 'completed').length) || 0, 10);\n                total = 10;\n                break;\n        }\n        return {\n            achievement,\n            progress,\n            total,\n            unlocked: progress >= total,\n            percentage: Math.round(progress / total * 100)\n        };\n    } catch (error) {\n        console.error('Error getting achievement progress:', error);\n        return null;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/achievement-tracker-db.ts\n"));

/***/ })

}]);
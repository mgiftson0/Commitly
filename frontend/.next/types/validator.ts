// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../app/about/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/about">> = Specific
  const handler = {} as typeof import("../../app/about/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/achievements/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/achievements">> = Specific
  const handler = {} as typeof import("../../app/achievements/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/analytics/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/analytics">> = Specific
  const handler = {} as typeof import("../../app/analytics/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/auth/clear-session/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/clear-session">> = Specific
  const handler = {} as typeof import("../../app/auth/clear-session/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/auth/kyc/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/kyc">> = Specific
  const handler = {} as typeof import("../../app/auth/kyc/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/auth/login/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/login">> = Specific
  const handler = {} as typeof import("../../app/auth/login/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/auth/reset-password/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/reset-password">> = Specific
  const handler = {} as typeof import("../../app/auth/reset-password/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/auth/signup/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/signup">> = Specific
  const handler = {} as typeof import("../../app/auth/signup/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/auth/test-config/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/test-config">> = Specific
  const handler = {} as typeof import("../../app/auth/test-config/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/auth/update-password/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/update-password">> = Specific
  const handler = {} as typeof import("../../app/auth/update-password/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/blog/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/blog">> = Specific
  const handler = {} as typeof import("../../app/blog/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/contact/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/contact">> = Specific
  const handler = {} as typeof import("../../app/contact/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard">> = Specific
  const handler = {} as typeof import("../../app/dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/debug-session/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/debug-session">> = Specific
  const handler = {} as typeof import("../../app/debug-session/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/features/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/features">> = Specific
  const handler = {} as typeof import("../../app/features/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/followers/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/followers">> = Specific
  const handler = {} as typeof import("../../app/followers/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/following/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/following">> = Specific
  const handler = {} as typeof import("../../app/following/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/goals/[id]/edit/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/goals/[id]/edit">> = Specific
  const handler = {} as typeof import("../../app/goals/[id]/edit/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/goals/[id]/group/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/goals/[id]/group">> = Specific
  const handler = {} as typeof import("../../app/goals/[id]/group/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/goals/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/goals/[id]">> = Specific
  const handler = {} as typeof import("../../app/goals/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/goals/[id]/partner/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/goals/[id]/partner">> = Specific
  const handler = {} as typeof import("../../app/goals/[id]/partner/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/goals/[id]/update/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/goals/[id]/update">> = Specific
  const handler = {} as typeof import("../../app/goals/[id]/update/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/goals/create/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/goals/create">> = Specific
  const handler = {} as typeof import("../../app/goals/create/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/goals/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/goals">> = Specific
  const handler = {} as typeof import("../../app/goals/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/goals/seasonal/[id]/edit/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/goals/seasonal/[id]/edit">> = Specific
  const handler = {} as typeof import("../../app/goals/seasonal/[id]/edit/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/goals/seasonal/[id]/update/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/goals/seasonal/[id]/update">> = Specific
  const handler = {} as typeof import("../../app/goals/seasonal/[id]/update/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/goals/seasonal/create/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/goals/seasonal/create">> = Specific
  const handler = {} as typeof import("../../app/goals/seasonal/create/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/goals/seasonal/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/goals/seasonal">> = Specific
  const handler = {} as typeof import("../../app/goals/seasonal/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/help/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/help">> = Specific
  const handler = {} as typeof import("../../app/help/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/notifications/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/notifications">> = Specific
  const handler = {} as typeof import("../../app/notifications/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/partners/accountability/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/partners/accountability">> = Specific
  const handler = {} as typeof import("../../app/partners/accountability/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/partners/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/partners">> = Specific
  const handler = {} as typeof import("../../app/partners/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/partners/search/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/partners/search">> = Specific
  const handler = {} as typeof import("../../app/partners/search/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/pricing/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/pricing">> = Specific
  const handler = {} as typeof import("../../app/pricing/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/privacy/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/privacy">> = Specific
  const handler = {} as typeof import("../../app/privacy/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/profile/[username]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/profile/[username]">> = Specific
  const handler = {} as typeof import("../../app/profile/[username]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/profile/edit/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/profile/edit">> = Specific
  const handler = {} as typeof import("../../app/profile/edit/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/profile/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/profile">> = Specific
  const handler = {} as typeof import("../../app/profile/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/search/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/search">> = Specific
  const handler = {} as typeof import("../../app/search/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/settings/goals/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/settings/goals">> = Specific
  const handler = {} as typeof import("../../app/settings/goals/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/settings/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/settings">> = Specific
  const handler = {} as typeof import("../../app/settings/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/settings/privacy/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/settings/privacy">> = Specific
  const handler = {} as typeof import("../../app/settings/privacy/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/terms/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/terms">> = Specific
  const handler = {} as typeof import("../../app/terms/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/set-session/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/set-session">> = Specific
  const handler = {} as typeof import("../../app/api/auth/set-session/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/follows/requests/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/follows/requests">> = Specific
  const handler = {} as typeof import("../../app/api/follows/requests/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/follows/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/follows">> = Specific
  const handler = {} as typeof import("../../app/api/follows/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/follows/status/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/follows/status">> = Specific
  const handler = {} as typeof import("../../app/api/follows/status/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/seasonal-cohorts/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/seasonal-cohorts">> = Specific
  const handler = {} as typeof import("../../app/api/seasonal-cohorts/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/seasonal-goals/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/seasonal-goals">> = Specific
  const handler = {} as typeof import("../../app/api/seasonal-goals/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/seasonal-milestones/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/seasonal-milestones">> = Specific
  const handler = {} as typeof import("../../app/api/seasonal-milestones/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/seasonal-templates/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/seasonal-templates">> = Specific
  const handler = {} as typeof import("../../app/api/seasonal-templates/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/session/log/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/session/log">> = Specific
  const handler = {} as typeof import("../../app/api/session/log/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/auth/callback/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/auth/callback">> = Specific
  const handler = {} as typeof import("../../app/auth/callback/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}





// Validate ../../app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
